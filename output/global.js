Ext.data.JsonP.global({"tagname":"class","name":"global","mixins":[],"alternateClassNames":[],"members":{"cfg":[],"property":[{"name":"","tagname":"property","owner":"global","meta":{},"id":"property-"},{"name":"E","tagname":"property","owner":"global","meta":{},"id":"property-E"},{"name":"controller","tagname":"property","owner":"global","meta":{},"id":"property-controller"},{"name":"uis","tagname":"property","owner":"global","meta":{},"id":"property-uis"}],"method":[{"name":"constructor","tagname":"method","owner":"global","meta":{"author":["Scott van Looy"]},"id":"method-constructor"},{"name":"","tagname":"method","owner":"global","meta":{},"id":"method-"},{"name":"add","tagname":"method","owner":"global","meta":{},"id":"method-add"},{"name":"callView","tagname":"method","owner":"global","meta":{},"id":"method-callView"},{"name":"combine","tagname":"method","owner":"global","meta":{},"id":"method-combine"},{"name":"createController","tagname":"method","owner":"global","meta":{},"id":"method-createController"},{"name":"createView","tagname":"method","owner":"global","meta":{},"id":"method-createView"},{"name":"empty","tagname":"method","owner":"global","meta":{},"id":"method-empty"},{"name":"getData","tagname":"method","owner":"global","meta":{},"id":"method-getData"},{"name":"getDefaultComponents","tagname":"method","owner":"global","meta":{},"id":"method-getDefaultComponents"},{"name":"hasEvent","tagname":"method","owner":"global","meta":{},"id":"method-hasEvent"},{"name":"publish","tagname":"method","owner":"global","meta":{},"id":"method-publish"},{"name":"remove","tagname":"method","owner":"global","meta":{},"id":"method-remove"},{"name":"requires","tagname":"method","owner":"global","meta":{},"id":"method-requires"},{"name":"setDefaultComponents","tagname":"method","owner":"global","meta":{},"id":"method-setDefaultComponents"},{"name":"subscribe","tagname":"method","owner":"global","meta":{},"id":"method-subscribe"},{"name":"tokeniser","tagname":"method","owner":"global","meta":{},"id":"method-tokeniser"},{"name":"unsubscribe","tagname":"method","owner":"global","meta":{},"id":"method-unsubscribe"}],"event":[],"css_var":[],"css_mixin":[]},"aliases":{},"meta":{},"files":[{"filename":"","href":""}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'><p>Global variables and functions.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseView.html#global-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-' class='name not-expandable'></a><span> : Object</span></div><div class='description'><div class='short'><p>API METHODS *</p>\n</div><div class='long'><p>API METHODS *</p>\n</div></div></div><div id='property-E' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Events.html#global-property-E' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-E' class='name not-expandable'>E</a><span> : Object</span></div><div class='description'><div class='short'><p>the Events object store.</p>\n</div><div class='long'><p>the Events object store.</p>\n</div></div></div><div id='property-controller' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseView.html#global-property-controller' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-controller' class='name not-expandable'>controller</a><span> : [type]</span></div><div class='description'><div class='short'><p>This is a reference to the controller that</p>\n</div><div class='long'><p>This is a reference to the controller that</p>\n</div></div></div><div id='property-uis' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseView.html#global-property-uis' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-uis' class='name not-expandable'>uis</a><span> : [type]</span></div><div class='description'><div class='short'><p>This is where you can find an object representing your UIs once you've called requires</p>\n</div><div class='long'><p>This is where you can find an object representing your UIs once you've called requires</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseController.html#global-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/global-method-constructor' class='name expandable'>global</a>( <span class='pre'></span> ) : <a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseView.html#global-method-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-' class='name expandable'></a>( <span class='pre'>views</span> ) : Object</div><div class='description'><div class='short'>Closure to create our object ...</div><div class='long'><p>Closure to create our object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>views</span> : Object<div class='sub-desc'><p>Namespace this should live at</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Namespace that includes our object</p>\n</div></li></ul></div></div></div><div id='method-add' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Events.html#global-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-add' class='name expandable'>add</a>( <span class='pre'>eventKeys</span> )</div><div class='description'><div class='short'>Adds events to registry. ...</div><div class='long'><p>Adds events to registry. Takes an event object consisting of one or more events key value pairs, for example:\n{\n   \"EVENT_FOO\" : \"onFoo\"\n}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventKeys</span> : Object<div class='sub-desc'><p>An object of strings.</p>\n</div></li></ul></div></div></div><div id='method-callView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseController.html#global-method-callView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-callView' class='name expandable'>callView</a>( <span class='pre'>namespace, view</span> ) : Object</div><div class='description'><div class='short'>On enter of your child controller, you call the view associated with that controller\nusing the callView method. ...</div><div class='long'><p>On enter of your child controller, you call the view associated with that controller\nusing the callView method. It either instantiates the view or if it already exists\nit calls \"enter\" on it. Your view's init must also call enter</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>namespace</span> : Object<div class='sub-desc'><p>your namespace</p>\n</div></li><li><span class='pre'>view</span> : string<div class='sub-desc'><p>the name of the view you're calling.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>returns the instantiated view.</p>\n</div></li></ul></div></div></div><div id='method-combine' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/ArrayUtils.html#global-method-combine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-combine' class='name expandable'>combine</a>( <span class='pre'>arr1, arr2</span> )</div><div class='description'><div class='short'>API METHODS * ...</div><div class='long'><p>API METHODS *</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>arr1</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>arr2</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createController' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseController.html#global-method-createController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-createController' class='name expandable'>createController</a>( <span class='pre'>object</span> ) : Object</div><div class='description'><div class='short'>createController - takes an object and extends it with the BaseController ...</div><div class='long'><p>createController - takes an object and extends it with the BaseController</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>to extend;</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>extended object</p>\n</div></li></ul></div></div></div><div id='method-createView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseView.html#global-method-createView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-createView' class='name expandable'>createView</a>( <span class='pre'>object</span> ) : Object</div><div class='description'><div class='short'>Takes an object and extends it with the BaseView ...</div><div class='long'><p>Takes an object and extends it with the BaseView</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>to extend;</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>extended object</p>\n</div></li></ul></div></div></div><div id='method-empty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Core.html#global-method-empty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-empty' class='name expandable'>empty</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>empty function, used as a stub * ...</div><div class='long'><p>empty function, used as a stub *</p>\n</div></div></div><div id='method-getData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseController.html#global-method-getData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-getData' class='name expandable'>getData</a>( <span class='pre'>options</span> )</div><div class='description'><div class='short'>getData - gets DATA from an external resource using JSON/JSONP. ...</div><div class='long'><p>getData - gets DATA from an external resource using JSON/JSONP. Will POST\nfor JSON requests, can only GET for JSONP. Technically, JSONP is insecure,\nbe very careful when using it, make sure the 3rd party is trustworthy.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>an object containing the information you require.\n{\n  url:{string},         the URL we get the data from. If JSONP, should either</p>\n\n<pre><code>                    include ?callback= parameter for services that don't\n                    allow dynamic callback assignments, or be callback\n                    parameter free to allow this code to assign one.\n</code></pre>\n\n<p>  data:{string},        name value pairs</p>\n\n<p>  success:{function()}, callback function on success. This will be passed</p>\n\n<pre><code>                    a data object.\n</code></pre>\n\n<p>  error:{function()},   callback function to do something on error. This will</p>\n\n<pre><code>                    be passed an object representing the error.\n</code></pre>\n\n<p>  jsonp:{string}        when set, forces JSONP with the specified string</p>\n\n<pre><code>                    as callback name\n</code></pre>\n\n<p>}</p>\n</div></li></ul></div></div></div><div id='method-getDefaultComponents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseView.html#global-method-getDefaultComponents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-getDefaultComponents' class='name expandable'>getDefaultComponents</a>( <span class='pre'></span> ) : Array</div><div class='description'><div class='short'>returns the array of default components. ...</div><div class='long'><p>returns the array of default components.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>[description]</p>\n</div></li></ul></div></div></div><div id='method-hasEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Events.html#global-method-hasEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-hasEvent' class='name expandable'>hasEvent</a>( <span class='pre'>key</span> ) : Boolean</div><div class='description'><div class='short'>Test to see if we have an event key for the specified event ...</div><div class='long'><p>Test to see if we have an event key for the specified event</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'><p>the key to test for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>returns true or false.</p>\n</div></li></ul></div></div></div><div id='method-publish' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Events.html#global-method-publish' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-publish' class='name expandable'>publish</a>( <span class='pre'>eventKey, parameters, view</span> ) : array | object</div><div class='description'><div class='short'>This publishes an event. ...</div><div class='long'><p>This publishes an event.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventKey</span> : string<div class='sub-desc'><p>The key for the event we would like to publish</p>\n</div></li><li><span class='pre'>parameters</span> : object<div class='sub-desc'><p>Any parameters passed to the event.</p>\n</div></li><li><span class='pre'>view</span> : string<div class='sub-desc'><p>Optionally pass a view's ID to only publish</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>array | object</span><div class='sub-desc'><p>an optional argument or array of arguments.</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Events.html#global-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-remove' class='name expandable'>remove</a>( <span class='pre'>arguments</span> ) : [type]</div><div class='description'><div class='short'>Remove events from registry ...</div><div class='long'><p>Remove events from registry</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>arguments</span> : arguments<div class='sub-desc'><p>list of keys to be removed from the event registry</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>[type]</span><div class='sub-desc'><p>[description]</p>\n</div></li></ul></div></div></div><div id='method-requires' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseView.html#global-method-requires' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-requires' class='name expandable'>requires</a>( <span class='pre'>namespace, arr, a</span> ) : String[]</div><div class='description'><div class='short'>All views require a set of components that exist within that view. ...</div><div class='long'><p>All views require a set of components that exist within that view. Every\nview should have an enter method that calls requires and adds the following.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>namespace</span> : Object<div class='sub-desc'><p>your namespace</p>\n</div></li><li><span class='pre'>arr</span> : String[]<div class='sub-desc'><p>an array of strings containing UI component names</p>\n</div></li><li><span class='pre'>a</span> : Object<div class='sub-desc'><p>reference to the view object</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String[]</span><div class='sub-desc'><p>array of objects</p>\n</div></li></ul></div></div></div><div id='method-setDefaultComponents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseView.html#global-method-setDefaultComponents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-setDefaultComponents' class='name expandable'>setDefaultComponents</a>( <span class='pre'>ns, arr</span> )</div><div class='description'><div class='short'>Sets default UIs. ...</div><div class='long'><p>Sets default UIs. These UIs appear on every page. Should only be\ncalled once in your project as it replaces everything each time.\ngenerally you would call this from your app view.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ns</span> : Object<div class='sub-desc'><ul>\n<li>the namespace your UIs can be found under.</li>\n</ul>\n\n</div></li><li><span class='pre'>arr</span> : string<div class='sub-desc'><ul>\n<li>An array of UI names.</li>\n</ul>\n\n</div></li></ul></div></div></div><div id='method-subscribe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Events.html#global-method-subscribe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-subscribe' class='name expandable'>subscribe</a>( <span class='pre'>Object</span> ) : null</div><div class='description'><div class='short'>Subscribe an object to some events. ...</div><div class='long'><p>Subscribe an object to some events. Pass this function a FractalJS object with methods that\nmatch methods in the registry and they will be added as event listeners to the events system.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Object</span> : Object<div class='sub-desc'><p>this is the FractalJS object you wish to listen to specific events.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>null</span><div class='sub-desc'><p>Does not return anything.</p>\n</div></li></ul></div></div></div><div id='method-tokeniser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/BaseController.html#global-method-tokeniser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-tokeniser' class='name expandable'>tokeniser</a>( <span class='pre'>string, tokens</span> ) : string</div><div class='description'><div class='short'>removes tokens in a string and replaces them with values. ...</div><div class='long'><p>removes tokens in a string and replaces them with values.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>string</span> : string<div class='sub-desc'><p>the string to replace tokens in:\nin the format of \"this is my/{token1}-{token2}/string/{token-3}\"</p>\n</div></li><li><span class='pre'>tokens</span> : [type]<div class='sub-desc'><p>an object of tokens to replace:\n{\n  token1: 'bert',\n  token2: 'fred',\n  token3: 12\n}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>string</span><div class='sub-desc'><p>tokenised string.</p>\n</div></li></ul></div></div></div><div id='method-unsubscribe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Events.html#global-method-unsubscribe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-unsubscribe' class='name expandable'>unsubscribe</a>( <span class='pre'>Object</span> ) : null</div><div class='description'><div class='short'>Allows us to manually remove an object's event listeners, for instance if\nwe destroy an object. ...</div><div class='long'><p>Allows us to manually remove an object's event listeners, for instance if\nwe destroy an object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Object</span> : Object<div class='sub-desc'><p>the FractalJS object we want to remove from the events system\nlistener list.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>null</span><div class='sub-desc'><p>Does not return anything.</p>\n</div></li></ul></div></div></div></div></div></div></div>"});